{"version":3,"sources":["components/PerguntaAberta.js","components/PerguntaFechada.js","components/Etapa1.js","components/Etapa2.js","components/Etapa3.js","components/EtapaFinal.js","components/Botao.js","App.js","serviceWorker.js","index.js"],"names":["PerguntaAberta","props","pergunta","PerguntaFechada","opcoes","Container","styled","div","Etapa1","Etapa2","Etapa3","EtapaFinal","Botao","onClick","aoClicar","App","state","etapa","renderizaEtapa","proximaEtapa","setState","apareceBotao","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8PAWeA,MATf,SAAwBC,GACpB,OACI,6BACI,2BAAIA,EAAMC,UACV,kCCWGC,MAbf,SAAyBF,GAKrB,OACI,6BACA,2BAAIA,EAAMC,UACV,2BAAID,EAAMG,U,wPCLlB,IAAMC,EAAYC,IAAOC,IAAV,KAgCAC,MAtBf,WACI,OACI,6BACI,kBAACH,EAAD,KACI,sDACA,kBAAC,EAAD,CAAgBH,SAAU,wBAC1B,kBAAC,EAAD,CAAgBA,SAAU,yBAC1B,kBAAC,EAAD,CAAgBA,SAAU,0BAC1B,kBAAC,EAAD,CAAgBA,SAAU,gCAC1B,kBAAC,EAAD,CACIA,SAAU,8BACVE,OAAQ,CACJ,6BACA,2BACA,6BACA,iC,iPC1BxB,IAAMC,EAAYC,IAAOC,IAAV,KAsBAE,MAZf,WACI,OACI,6BACI,kBAAC,EAAD,KACA,8EACA,kBAAC,EAAD,CAAgBP,SAAU,mBAC1B,kBAAC,EAAD,CAAgBA,SAAU,oC,iPChBtC,IAAMG,EAAYC,IAAOC,IAAV,KA2BAG,MAjBf,WACI,OACI,6BACI,kBAAC,EAAD,KACA,4EACA,kBAAC,EAAD,CAAgBR,SAAU,oEAC1B,uEACA,gCACI,0CACA,iDACA,0D,iPCtBhB,IAAMG,EAAYC,IAAOC,IAAV,KAqBAI,MAXf,WACI,OACI,6BACI,kBAAC,EAAD,KACA,sDACA,uFCPGC,MARf,SAAeX,GACX,OACI,6BACI,4BAAQY,QAASZ,EAAMa,UAAvB,sB,iPCGZ,IAAMT,EAAYC,IAAOC,IAAV,KAkDAQ,E,4MAvCbC,MAAQ,CACNC,MAAO,G,EAGTC,eAAiB,WACf,OAAQ,EAAKF,MAAMC,OACjB,KAAK,EACH,OAAO,kBAAC,EAAD,MACT,KAAK,EACH,OAAO,kBAAC,EAAD,MACT,KAAK,EACH,OAAO,kBAAC,EAAD,MACT,KAAK,EACH,OAAO,kBAAC,EAAD,Q,EAIbE,aAAe,WACb,EAAKC,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQ,K,uDAO5B,IAAII,EAIJ,OAHIC,KAAKN,MAAMC,MAAQ,IACrBI,EAAe,kBAAC,EAAD,CAAOP,SAAUQ,KAAKH,gBAGrC,kBAAC,EAAD,KACGG,KAAKJ,iBACLG,O,GAlCSE,IAAMC,WCRJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.19e92d0f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction PerguntaAberta(props) {\r\n    return (\r\n        < div >\r\n            <p>{props.pergunta}</p>\r\n            <input />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default PerguntaAberta;","import React from 'react';\r\n\r\n\r\n\r\nfunction PerguntaFechada(props) {\r\n    // const lista = {props.opcoes}.map((cada) => {\r\n    //     <p>{cada}</p>\r\n    // })\r\n\r\n    return (\r\n        < div >\r\n        <p>{props.pergunta}</p>\r\n        <p>{props.opcoes}</p>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default PerguntaFechada;","import React from 'react';\r\nimport PerguntaAberta from './PerguntaAberta'\r\nimport PerguntaFechada from './PerguntaFechada'\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    margin-left: 5vw;\r\n    margin-right: 5vw;\r\n    padding-left: 5vw;\r\n    padding-right: 5vw;\r\n`\r\n\r\nfunction Etapa1() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1>Etapa 1 - Dados Gerais</h1>\r\n                <PerguntaAberta pergunta={\"1. Qual o seu nome?\"} />\r\n                <PerguntaAberta pergunta={\"2. Qual a sua idade?\"} />\r\n                <PerguntaAberta pergunta={\"3. Qual o seu e-mail?\"} />\r\n                <PerguntaAberta pergunta={\"4. Qual a sua escolaridade?\"} />\r\n                <PerguntaFechada\r\n                    pergunta={\"4. Qual a sua escolaridade?\"}\r\n                    opcoes={[\r\n                        \"Ensino médio incompleto\",\r\n                        \"Ensino médio completo\",\r\n                        \"Ensino superior incompleto\",\r\n                        \"Ensino superior completo\"\r\n                    ]}/>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Etapa1;\r\n","import React from 'react';\r\nimport PerguntaAberta from './PerguntaAberta'\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    margin-left: 5vw;\r\n    margin-right: 5vw;\r\n    padding-left: 5vw;\r\n    padding-right: 5vw;\r\n`\r\n\r\nfunction Etapa2() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n            <h1>Etapa 2 - Informações do Ensino Superior</h1>\r\n            <PerguntaAberta pergunta={\"5. Qual curso?\"}/>\r\n            <PerguntaAberta pergunta={\"6. Qual a unidade de ensino?\"}/>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Etapa2;\r\n","import React from 'react';\r\nimport PerguntaAberta from './PerguntaAberta'\r\nimport PerguntaFechada from './PerguntaFechada'\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    margin-left: 5vw;\r\n    margin-right: 5vw;\r\n    padding-left: 5vw;\r\n    padding-right: 5vw;\r\n`\r\n\r\nfunction Etapa3() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n            <h1>Etapa 3 - Informações Gerais de Ensino</h1>\r\n            <PerguntaAberta pergunta={\"7. Por que você não terminou um curso de graduação?\"}/>\r\n            <p>8. Você fez algum curso complementar?</p>\r\n            <select>\r\n                <option>Nenhum</option>\r\n                <option>Curso Tecnico</option>\r\n                <option>Curso de Inglês</option>\r\n            </select>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Etapa3;\r\n\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    margin-left: 5vw;\r\n    margin-right: 5vw;\r\n    padding-left: 5vw;\r\n    padding-right: 5vw;\r\n`\r\n\r\nfunction EtapaFinal() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n            <h1>O FORMULÁRIO ACABOU</h1>\r\n            <p>Muito obrigado por participar! Entraremos em contato!</p>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EtapaFinal;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nfunction Botao(props) {\r\n    return (\r\n        <div>\r\n            <button onClick={props.aoClicar}>Próxima Etapa</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Botao;\r\n","import React, { Component } from 'react';\nimport Etapa1 from '../src/components/Etapa1'\nimport Etapa2 from '../src/components/Etapa2'\nimport Etapa3 from '../src/components/Etapa3'\nimport EtapaFinal from '../src/components/EtapaFinal'\nimport Botao from '../src/components/Botao'\n\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    margin-left: 5vw;\n    margin-right: 5vw;\n    padding-left: 5vw;\n    padding-right: 5vw;\n`\n\nclass App extends React.Component {\n  state = {\n    etapa: 1\n  }\n\n  renderizaEtapa = () => {\n    switch (this.state.etapa) {\n      case 1:\n        return <Etapa1 />\n      case 2:\n        return <Etapa2 />\n      case 3:\n        return <Etapa3 />\n      case 4:\n        return <EtapaFinal />\n    }\n  }\n\n  proximaEtapa = () => {\n    this.setState({\n      etapa: this.state.etapa + 1\n    })\n  }\n\n\n\n  render() {\n    let apareceBotao\n    if (this.state.etapa < 4) {\n      apareceBotao = <Botao aoClicar={this.proximaEtapa}/>\n    }\n    return (\n      <Container>\n        {this.renderizaEtapa()}\n        {apareceBotao}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}